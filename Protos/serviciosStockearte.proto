syntax = "proto3"; // Defino la sintaxis del archivo proto (proto3 es la sintaxis mas actual)

package stockeartePackage; // Defino el nombre del paquete

service stockearteService // Creo el servicio y los métodos que va a tener
{ 
    // tiendaService
    rpc altaTienda (altaTiendaRequest) returns (mensajeSimple) {} // Defino un método unario
    rpc buscarTienda(buscarTiendaRequest) returns (tienda) {}
    rpc buscarTodasLasTiendas (mensajeVacio) returns (arregloTiendas) {}
    rpc modificarTienda (modificarTiendaRequest) returns (mensajeSimple) {}
    rpc traerNovedades (mensajeVacio) returns (arregloNovedades) {}
    rpc altaNovedades (novedad) returns (mensajeSimple) {}

    // usuarioService
    rpc altaUsuario (altaUsuarioRequest) returns (mensajeSimple) {}
    rpc buscarUsuario (buscarUsuarioRequest) returns (usuario) {}
    rpc buscarTodosLosUsuarios (mensajeVacio) returns (arregloUsuarios) {}
    rpc modificarUsuario (modificarUsuarioRequest) returns (mensajeSimple) {} 

    // productoService
    rpc altaProducto (altaProductoRequest) returns (mensajeSimple) {}
    rpc buscarProducto (buscarProductoRequest) returns (arregloProductos) {}
    //rpc buscarTodosLosProductos (buscarTodosLosProductosRequest) returns (arregloProductos_2) {} 
    rpc buscarTodosLosProductos (buscarTodosLosProductosRequest) returns (arregloProductos_3) {}
    rpc modificarStock (modificarStockRequest) returns (mensajeSimple) {}
    rpc modificarProducto (modificarProductoRequest) returns (mensajeSimple) {}
    rpc asignarProducto (asignarYDesasignarProductoRequest) returns (mensajeSimple) {}
    rpc desasignarProducto (asignarYDesasignarProductoRequest) returns (mensajeSimple) {}

    // Funciones complementarias
    rpc traerUsuarioPorId (buscarIdRequest) returns (usuario) {}
    rpc traerTiendaPorCodigo (buscarCodigoRequest) returns (tienda) {}
    rpc traerProductoPorCodigo (buscarCodigoRequest) returns (producto) {}
    rpc hacerLogin (hacerLoginRequest) returns (hacerLoginResponse) {}
    rpc traerProductosDeLaTienda (traerProductosDeLaTiendaRequest) returns (traerProductosDeLaTiendaResponse) {}

    // proveedorService
    rpc altaOrdenDeCompra (altaOrdenDeCompraRequest) returns (mensajeSimple) {}
    rpc traerOrdenesDeCompraAceptadasYConDespacho (traerOrdenesDeCompraAceptadasYConDespachoRequest) returns (traerOrdenesDeCompraAceptadasYConDespachoResponse) {}
    rpc aceptarDespacho (aceptarDespachoRequest) returns (mensajeSimple) {}
}

/*********************************************************************************************/
// DEFINICIÓN DE TIPOS DE DATOS


// TIPOS DE DATOS RE-UTILIZABLES
message mensajeSimple // Defino que datos va a tener este tipo de dato
{
    string mensaje = 1; // Las variables deben estar ordenadas numericamente
}

message mensajeVacio {}


// tiendaService
message altaTiendaRequest     
{   
    string usuarioCentral    = 1; 
    string codigo            = 2;  
    string direccion         = 3;
    string ciudad            = 4;
    string provincia         = 5;
    optional bool habilitado = 6;
}


message buscarTiendaRequest
{
    string usuarioCentral      = 1;
    string codigoTiendaABuscar = 2;
}

message tienda
{
    string codigo            = 1;
    string direccion         = 2;
    string ciudad            = 3;
    string provincia         = 4;
    optional bool habilitado = 5;
    optional bool central    = 6;
}

message arregloTiendas
{
    repeated tienda arregloTiendas = 1;
}


message modificarTiendaRequest
{
    string codigoTiendaAModificar = 1;
    string codigo                 = 2;
    string direccion              = 3;
    string ciudad                 = 4;
    string provincia              = 5;
    optional bool habilitado      = 6;
    optional bool central         = 7;
}

message arregloNovedades
{
    repeated novedad arregloNovedades = 1;
}

message novedad
{
    string codigo   = 1;
    string nombre   = 2;
    string talle    = 3;
    string foto     = 4;
    string color    = 5;
}

// usuarioService
message altaUsuarioRequest
{
    string usuarioCentral    = 1;
    string usuario           = 2;
    string password          = 3;
    string nombre            = 4;
    string apellido          = 5;
    optional bool habilitado = 6;
    string tienda_codigo     = 7; 
}

message buscarUsuarioRequest
{
    string usuarioCentral = 1;
    string usuarioABuscar = 2;
    int32  idABuscar      = 3;
}

message usuario
{
    int32  id                = 1;
    string usuario           = 2;
    string password          = 3;
    string nombre            = 4;
    string apellido          = 5;
    optional bool habilitado = 6;
    string tienda_codigo     = 7;
}

message arregloUsuarios
{
    repeated usuario arregloUsuarios = 1;
}

message modificarUsuarioRequest
{
    string usuarioAModificar = 1;
    string usuario           = 2;
    string password          = 3;
    string nombre            = 4; 
    string apellido          = 5;
    optional bool habilitado = 6;
    string tienda_codigo     = 7;    
}



// productoService
message altaProductoRequest
{
    string nombre         = 1;
    string codigoProducto = 2;
    string talle          = 3;
    bytes foto           = 4;
    string color          = 5;
    repeated TiendaObject tiendaObject = 6;
}

message TiendaObject {
    string codigo = 1;
}


message buscarProductoRequest
{
    string usuarioCentral        = 1;
    string codigoProductoABuscar = 2;
}

message producto
{
    string codigo        = 1;
    string nombre        = 2;
    string talle         = 3;
    string color         = 4;
    bytes foto           = 5;
    string tienda_codigo = 6;
    optional int32 stock = 7;
}

message arregloProductos
{
    repeated producto arregloProductos = 1;
}


message buscarTodosLosProductosRequest
{
    string usuarioCentral = 1;
}

message arregloProductos_2
{
    repeated producto_2 arregloProductos_2 = 1;
}

message producto_2
{
    string codigo  = 1;
    string nombre  = 2;
    string talle   = 3;
    string color   = 4;
    repeated arregloCodigosDeTienda arregloCodigosDeTienda = 5;
}

message arregloProductos_3
{
    repeated producto_3 arregloProductos_3 = 1;
}

message producto_3
{
    string codigo  = 1;
    string nombre  = 2;
    string talle   = 3;
    bytes foto     = 4;
    string color   = 5;
    string codigoTienda = 6;
    optional int32 stock = 7;
}

message arregloCodigosDeTienda
{
    string codigoTienda = 1;
}


message modificarStockRequest
{
    string usuario         = 1;
    int32  stock           = 2;
    string producto_codigo = 3;
}

message modificarProductoRequest
{
    string codigo = 1;
    string nombre = 2;
    string talle  = 3;
    bytes foto   = 4;
    string color  = 5;
}

message asignarYDesasignarProductoRequest{
    string codigoTienda = 1;
    string codigoProducto =2;
}

// Funciones complementarias
message buscarCodigoRequest 
{
    string codigo = 1;
}

message buscarIdRequest 
{
    int32 id = 1;
}

message hacerLoginRequest
{
    string usuario  = 1;
    string password = 2;
}

message hacerLoginResponse
{
    string usuario    = 1;
    string password   = 2;
    string nombre     = 3;
    string apellido   = 4;
    optional bool habilitado = 5;
    string tienda_codigo     = 6;
    optional bool central    = 7;
}

message traerProductosDeLaTiendaRequest
{
    string tienda_codigo = 1;
}

message productoDeLaTienda
{
    string codigo        = 1;
    string nombre        = 2;
    string talle         = 3;
    string color         = 4;
    bytes foto           = 5;
    string tienda_codigo = 6;
    optional int32  stock         = 7;
}

message traerProductosDeLaTiendaResponse
{
    repeated productoDeLaTienda arregloProductoDeLaTienda = 1;
}

// proveedorService
message altaOrdenDeCompraRequest
{
    string tienda_codigo = 1;
    repeated item items  = 2;
}

message traerOrdenesDeCompraAceptadasYConDespachoRequest
{
    string tienda_codigo = 1;
}

message traerOrdenesDeCompraAceptadasYConDespachoResponse
{
    repeated item arregloItems = 1;
}

message item
{
    optional int32 id_orden_de_compra  = 1;
    string         producto_codigo     = 2;
    string         color               = 3;
    string         talle               = 4;
    optional int32 cantidad_solicitada = 5;
}

message aceptarDespachoRequest
{
    optional int32 id_orden_de_compra  = 1;
}